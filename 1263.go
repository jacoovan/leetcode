/*
1263:推箱子
leetcodeID : 1389
leetcode地址 : https://leetcode-cn.com/problems/minimum-moves-to-move-a-box-to-their-target-location/
难度 : 困难

「推箱子」是一款风靡全球的益智小游戏，玩家需要将箱子推到仓库中的目标位置。

游戏地图用大小为 n * m 的网格 grid 表示，其中每个元素可以是墙、地板或者是箱子。

现在你将作为玩家参与游戏，按规则将箱子 &#39;B&#39; 移动到目标位置 &#39;T&#39; ：

<ul>
	玩家用字符 &#39;S&#39; 表示，只要他在地板上，就可以在网格中向上、下、左、右四个方向移动。
	地板用字符 &#39;.&#39; 表示，意味着可以自由行走。
	墙用字符 &#39;#&#39; 表示，意味着障碍物，不能通行。 
	箱子仅有一个，用字符 &#39;B&#39; 表示。相应地，网格上有一个目标位置 &#39;T&#39;。
	玩家需要站在箱子旁边，然后沿着箱子的方向进行移动，此时箱子会被移动到相邻的地板单元格。记作一次「推动」。
	玩家无法越过箱子。
</ul>

返回将箱子推到目标位置的最小 推动 次数，如果无法做到，请返回 -1。

 

示例 1：

<img alt="" src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2019/11/16/sample_1_1620.png" style="height: 349px; width: 520px;">

输入：grid = [["#","#","#","#","#","#"],
             ["#","T","#","#","#","#"],
             ["#",".",".","B",".","#"],
             ["#",".","#","#",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]
输出：3
解释：我们只需要返回推箱子的次数。

示例 2：

输入：grid = [["#","#","#","#","#","#"],
             ["#","T","#","#","#","#"],
             ["#",".",".","B",".","#"],
             ["#","#","#","#",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]
输出：-1


示例 3：

输入：grid = [["#","#","#","#","#","#"],
             ["#","T",".",".","#","#"],
             ["#",".","#","B",".","#"],
             ["#",".",".",".",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]
输出：5
解释：向下、向左、向左、向上再向上。


示例 4：

输入：grid = [["#","#","#","#","#","#","#"],
             ["#","S","#",".","B","T","#"],
             ["#","#","#","#","#","#","#"]]
输出：-1


 

提示：

<ul>
	1 <= grid.length <= 20
	1 <= grid[i].length <= 20
	grid 仅包含字符 &#39;.&#39;, &#39;#&#39;,  &#39;S&#39; , &#39;T&#39;, 以及 &#39;B&#39;。
	grid 中 &#39;S&#39;, &#39;B&#39; 和 &#39;T&#39; 各只能出现一个。
</ul>

 */
package main

import(
    "fmt"
)

func main(){
    fmt.Println("请完成你的逻辑代码")
}

func minPushBox(grid [][]byte) int {
    
}